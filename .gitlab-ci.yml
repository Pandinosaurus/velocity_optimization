before_script:
  - rm -rf "*-env"; virtualenv -p python3 ${CI_JOB_ID}-env
  - ${CI_JOB_ID}-env/bin/pip3 install -r requirements.txt

after_script:
  - 'killall --user $USER'
  - rm -rf ${CI_JOB_ID}-env

stages:
  - style_guide_checks
  - sqp_performance_check
  - pypi_deploy_internal
  - tpc_checks
  - pypi_deploy_external

Flake8Checks:
  stage: style_guide_checks
  tags:
    - CI_TrackPerformanceLRZ
  script:
    - ${CI_JOB_ID}-env/bin/flake8
  allow_failure: true

VectorMatrixCheck:
  stage: sqp_performance_check
  tags:
    - CI_TrackPerformanceLRZ
  script:
    - "sed -i '/b_sparse_matrix_fill=/c\ b_sparse_matrix_fill=1' velocity_optimization/params/sqp_config.ini"
    - ${CI_JOB_ID}-env/bin/python3 CI/vecmat_test_vp_qp.py
  allow_failure: false

SQPPerformanceCheck:
  stage: sqp_performance_check
  tags:
    - CI_TrackPerformanceLRZ
  script:
    - "sed -i '/b_sparse_matrix_fill=/c\ b_sparse_matrix_fill=1' velocity_optimization/params/sqp_config.ini"
    - ${CI_JOB_ID}-env/bin/python3 velocity_optimization/main_vp_sqp.py
  timeout: 15m
  allow_failure: false

DeployInternal:
  stage: pypi_deploy_internal
  tags:
    - CI_TrackPerformanceLRZ
  script:
    - ${CI_JOB_ID}-env/bin/python3 -m pip install --upgrade setuptools wheel
    - ${CI_JOB_ID}-env/bin/python3 setup.py sdist bdist_wheel
    - ${CI_JOB_ID}-env/bin/pip3 install --upgrade twine
    - ${CI_JOB_ID}-env/bin/python3 -m twine upload --repository-url ${PYPI_SERVER} --username ${PYPI_USER} --password ${PYPI_PASSWORD} dist/*
  allow_failure: false

TPCChecks:
  stage: tpc_checks
  trigger:
    project: roborace/modules/mod_local_trajectory
    branch: develop
    strategy: depend

DeployExternal:
  stage: pypi_deploy_external
  tags:
    - CI_TrackPerformanceLRZ
  only:
    - master
  script:
    - ${CI_JOB_ID}-env/bin/python3 -m pip install --upgrade setuptools wheel
    - ${CI_JOB_ID}-env/bin/python3 setup.py sdist bdist_wheel
    - ${CI_JOB_ID}-env/bin/pip3 install --upgrade twine
    - ${CI_JOB_ID}-env/bin/python3 -m twine upload --username ${PYPI_USER_HERRMANN} --password ${PYPI_TOKEN_HERRMANN} dist/*
  allow_failure: false
  
pages:
  stage: pypi_deploy_external
  tags:
    - CI_TrackPerformanceLRZ
  only:
    - master
  script:
    - ${CI_JOB_ID}-env/bin/sphinx-apidoc -f -o ./docs/source velocity_optimization
    - ${CI_JOB_ID}-env/bin/sphinx-build -b html docs/source docs/build
    - mkdir public
    - cp -r docs/build/* public
  artifacts:
    when: always
    paths:
      - public
  allow_failure: false
